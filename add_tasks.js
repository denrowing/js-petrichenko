// function calculateVolumeAndArea(num) {
//     if (typeof(num) === 'number' && num > 0 && Number.isInteger(num) ) {
//         return `'volume': ${Math.pow(num, 3).toString()} , 'square': ${( Math.pow(num, 2) * 6 ).toString()} `
//     } else {
//         return 'An error occurred while calculating'
//     }
// }

// console.log(calculateVolumeAndArea(7));
// console.log(calculateVolumeAndArea(15));
// console.log(calculateVolumeAndArea(15.5));
// console.log(calculateVolumeAndArea('15'));
// console.log(calculateVolumeAndArea(-15));


// function getCoupeNumber(num) {
//     if ( num === 0 || num > 36 ) {
//         return 'Such place dont exist'
//     } 

//     if (!Number.isInteger(num) || num < 0 || (typeof(num) !== 'number')) {
//         return 'Error. Check the number your typed'
//     }

//     if ( ( num >= 33 && num < 36 ) ) {
//         return Math.round( num / 4 ) + 1
//     } else {
//         return Math.round( num / 4 )
//     }

// }

// console.log(getCoupeNumber(33));  // => 9
// console.log(getCoupeNumber(2)); // => 1
// console.log(getCoupeNumber(7)); // => 2
// console.log(getCoupeNumber(8)); // => 2
// console.log(getCoupeNumber(300)); // => "–¢–∞–∫–∏—Ö –º–µ—Å—Ç –≤ –≤–∞–≥–æ–Ω–µ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç"
// console.log(getCoupeNumber(0));  //=> "–¢–∞–∫–∏—Ö –º–µ—Å—Ç –≤ –≤–∞–≥–æ–Ω–µ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç"
// console.log(getCoupeNumber(7.7)); // => "–û—à–∏–±–∫–∞. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å –≤–≤–µ–¥–µ–Ω–Ω–æ–≥–æ –Ω–æ–º–µ—Ä–∞ –º–µ—Å—Ç–∞"
// console.log(getCoupeNumber(-10)); // => "–û—à–∏–±–∫–∞. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å –≤–≤–µ–¥–µ–Ω–Ω–æ–≥–æ –Ω–æ–º–µ—Ä–∞ –º–µ—Å—Ç–∞"
// console.log(getCoupeNumber('Hello')); // => "–û—à–∏–±–∫–∞. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å –≤–≤–µ–¥–µ–Ω–Ω–æ–≥–æ –Ω–æ–º–µ—Ä–∞ –º–µ—Å—Ç–∞"

// getCoupeNumber(7) // => 2
// getCoupeNumber(300) // => "–¢–∞–∫–∏—Ö –º–µ—Å—Ç –≤ –≤–∞–≥–æ–Ω–µ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç"
// getCoupeNumber(0)  //=> "–¢–∞–∫–∏—Ö –º–µ—Å—Ç –≤ –≤–∞–≥–æ–Ω–µ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç"
// getCoupeNumber(7.7) // => "–û—à–∏–±–∫–∞. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å –≤–≤–µ–¥–µ–Ω–Ω–æ–≥–æ –Ω–æ–º–µ—Ä–∞ –º–µ—Å—Ç–∞"
// getCoupeNumber(-10) // => "–û—à–∏–±–∫–∞. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å –≤–≤–µ–¥–µ–Ω–Ω–æ–≥–æ –Ω–æ–º–µ—Ä–∞ –º–µ—Å—Ç–∞"
// getCoupeNumber('Hello')

// function getTimeFromMinutes(minuts) {

//     if( minuts >= 0 && minuts < 60 ) {
//        return  `–≠—Ç–æ 0 —á–∞—Å–æ–≤ –∏ ${minuts} –º–∏–Ω—É—Ç`
//     }

//     if (minuts >= 60 && minuts <= 600 ) {
//         return `–≠—Ç–æ ${ Math.floor( minuts / 60 ) } —á–∞—Å–æ–≤ –∏ ${ minuts % 60 } –º–∏–Ω—É—Ç`
//     }

//     if (minuts < 0 || !Number.isInteger(minuts) ) {
//         return  "–û—à–∏–±–∫–∞, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –¥–∞–Ω–Ω—ã–µ"
//     }
// }

// console.log(getTimeFromMinutes(150)); //=> "–≠—Ç–æ 2 —á–∞—Å–∞ –∏ 30 –º–∏–Ω—É—Ç"
// console.log(getTimeFromMinutes(60));  //=> "–≠—Ç–æ 0 —á–∞—Å–æ–≤ –∏ 50 –º–∏–Ω—É—Ç"
// console.log(getTimeFromMinutes(0)); //=> "–≠—Ç–æ 0 —á–∞—Å–æ–≤ –∏ 0 –º–∏–Ω—É—Ç"
// console.log(getTimeFromMinutes(-150));  //=> "–û—à–∏–±–∫–∞, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –¥–∞–Ω–Ω—ã–µ"

// function findMaxNumber(a, b, c, d) {
//     if ( typeof(a) !== 'number' || typeof(b) !== 'number' || typeof(c) !== 'number' || typeof(d) !== 'number') {
//         return 0
//     }

//     if ( !a || !b || !c || !d) {
//         return 0
//     }

//     return Math.max(a, b, c, d)
// }

// console.log(findMaxNumber(1, 35, 6.6, 11)); //=>  11
// console.log(findMaxNumber(1, 5, '6', '10')); // =>  0
// console.log(findMaxNumber(1, 5, 4)); // =>  0


// function fib(qty) {
//     let result = ' '
//     let pre = 0
//     let suf = 1
//     let resultNum

//     if (typeof(qty) !== "number" || qty === 0) {
//         return result
//     }

//     for (let i = 0; i < qty; i++) {

//         if ( qty === 1 ) {
//             return result += 0
//         }

//         if ( qty >= 2 ) {
//             result += ' ' + pre.toString()
//             resultNum = pre + suf
//             pre = suf
//             suf = resultNum
//         }


//     }
//     return result

// }

// console.log(fib(4));  //=> ''0 1 1 2"
// console.log(fib(7));  //=> ''0 1 1 2 3 5 8"
// console.log(fib('7')); //=> ''"
// console.log(fib(1));  //=> "0"
// console.log(fib(0));  //=> ''"


//Callback
// function study(lang, callback) {
//     console.log(`I'm learning ${lang}`);
//     callback()
// }

// function done() {
//     console.log("I've been learned this subject very well");
// }

// study('NodeJS', done)

// const personalPlanPeter = {
//     name: "Peter",
//     age: "29",
//     skills: {
//         languages: ['ru', 'eng'],
//         programmingLangs: {
//             js: '20%',
//             php: '10%'
//         },
//         exp: '1 month'
//     },
//     showAgeAndLangs: function(data) {
//         const lang = data.skills.languages.map( a => a.toUpperCase()).join(' ')
//         return `–ú–Ω–µ ${data['age']} –∏ —è –≤–ª–∞–¥–µ—é —è–∑—ã–∫–∞–º–∏: ${lang}`
//     }

// };

// 3) –°–æ–∑–¥–∞–π—Ç–µ –º–µ—Ç–æ–¥ showAgeAndLangs –≤–Ω—É—Ç—Ä–∏ –æ–±—ä–µ–∫—Ç–∞ personalPlanPeter. –ü—Ä–∏ –µ–≥–æ –≤—ã–∑–æ–≤–µ –º–µ—Ç–æ–¥ –±—É–¥–µ—Ç –ø—Ä–∏–Ω–∏–º–∞—Ç—å –≤ —Å–µ–±—è –æ–±—ä–µ–∫—Ç –∏ –≤–æ–∑–≤—Ä–∞—â–∞—Ç—å —Å—Ç—Ä–æ–∫—É –≤ –Ω—É–∂–Ω–æ–º –≤–∏–¥–µ.

// –ü—Ä–∏–º–µ—Ä:

// personalPlanPeter.showAgeAndLangs(personalPlanPeter)
// => '–ú–Ω–µ 29 –∏ —è –≤–ª–∞–¥–µ—é —è–∑—ã–∫–∞–º–∏: RU ENG'

// console.log(personalPlanPeter.showAgeAndLangs(personalPlanPeter));

// function showExperience(plan) {
//     const { exp } = plan.skills
//     return exp
// }

// console.log(showExperience(personalPlanPeter));

// function showProgrammingLangs(plan) {
//     let str = ''
//     let obj = plan.skills.programmingLangs
//     for (let key in obj) {
//         str += `–Ø–∑—ã–∫ ${key} –∏–∑—É—á–µ–Ω –Ω–∞ ${obj[key]} \n`
//     }
//     return str
// }

// console.log(showProgrammingLangs(personalPlanPeter));

// const family = ['Peter', 'Ann', 'Alex', 'Linda'];
// const emptyArr = []

// function showFamily(arr) {
//     let str = arr.join(' ')
//     if ( str.length === 0 ) {
//         return '–°–µ–º—å—è –ø—É—Å—Ç–∞'
//     } else {
//         return `–°–µ–º—å—è —Å–æ—Å—Ç–æ–∏—Ç –∏–∑: ${str}`
//     }
// }

// function showFamily(arr) {
//     let str = arr.join(' ')
//     if ( str.length === 0 ) {
//         return '–°–µ–º—å—è –ø—É—Å—Ç–∞'
//     } else {
//         return `–°–µ–º—å—è —Å–æ—Å—Ç–æ–∏—Ç –∏–∑: ${str}`
//     }
// }

// console.log(showFamily(family));
// console.log(showFamily(emptyArr));

// const favoriteCities = ['liSBon', 'ROME', 'miLan', 'Dublin'];

// function standardizeStrings(arr) {
//     // return arr.map( a => a.toLowerCase() ).forEach( b => console.log(b + '\n') )
//     arr.forEach( city => console.log( city.toLowerCase() ) )

// }

// console.log(standardizeStrings(favoriteCities));


// const someString = 'This is some strange string';

// function reverse(str) {
// if ( typeof(str) === "string" ) {
//     return str.split(' ').map( a => a.split('').reverse().join('') ).reverse().join(' ')
// } else {
//     return '–û—à–∏–±–∫–∞!'
// }
// }

// console.log(reverse(someString));
// console.log(reverse(5));

// const baseCurrencies = ['USD', 'EUR'];
// const additionalCurrencies = ['UAH', 'RUB', 'CNY'];

// function availableCurr( arr, missingCurr ) {

//     let str = ''
//     arr.length === 0 ? str = '–ù–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –≤–∞–ª—é—Ç' : str = `–î–æ—Å—Ç—É–ø–Ω—ã–µ –≤–∞–ª—é—Ç—ã: \n`
//     let filteredCurrency = arr.filter( a => a !== missingCurr )
//     filteredCurrency.forEach( (curr, i) => str += `${curr}\n`)


//     // let str = '';
//     // arr.length === 0 ? str = '–ù–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –≤–∞–ª—é—Ç' : str = '–î–æ—Å—Ç—É–ø–Ω—ã–µ –≤–∞–ª—é—Ç—ã:\n';

//     // arr.forEach(function(curr, i) {
//     //     if (curr !== missingCurr) {
//     //         str += `${curr}\n`;
//     //     }
//     // });

//     return str

// }

// console.log(availableCurr([ ...baseCurrencies, ...additionalCurrencies ], 'RUB'));

// –ó–∞–¥–∞—á–∞:
// –£ –≤–∞—Å –µ—Å—Ç—å –Ω–µ–±–æ–ª—å—à–æ–π –∫—É—Å–æ—á–µ–∫ –¥–∞–Ω–Ω—ã—Ö –æ —Ç–æ—Ä–≥–æ–≤–æ–º —Ü–µ–Ω—Ç—Ä–µ, –∫–æ—Ç–æ—Ä—ã–µ –∑–∞–ø–∏—Å–∞–Ω—ã –≤ –æ–±—ä–µ–∫—Ç–µ shoppingMallData. –û–Ω–∏ —Å–æ–¥–µ—Ä–∂–∞—Ç –º–∞—Å—Å–∏–≤ —Å –¥–∞–Ω–Ω—ã–º–∏ –æ –º–∞–≥–∞–∑–∏–Ω–∞—Ö, –≥–¥–µ —É–∫–∞–∑–∞–Ω–∞ –¥–ª–∏–Ω–∞ –∏ —à–∏—Ä–∏–Ω–∞ –ø–æ–º–µ—â–µ–Ω–∏—è; –≤—ã—Å–æ—Ç—É –ø–æ–º–µ—â–µ–Ω–∏—è; —Å—Ç–æ–∏–º–æ—Å—Ç—å –æ—Ç–æ–ø–ª–µ–Ω–∏—è –∑–∞ 1 –∫—É–±–∏—á–µ—Å–∫–∏–π –º–µ—Ç—Ä –∏ –±—é–¥–∂–µ—Ç –Ω–∞ –æ–ø–ª–∞—Ç—É –æ—Ç–æ–ø–ª–µ–Ω–∏—è –∑–∞ –º–µ—Å—è—Ü.
// –û—Å–Ω–æ–≤–Ω–∞—è –∑–∞–¥–∞—á–∞ - —ç—Ç–æ –Ω–∞–ø–∏—Å–∞—Ç—å —Ñ—É–Ω–∫—Ü–∏—é isBudgetEnough, –∫–æ—Ç–æ—Ä–∞—è –±—É–¥–µ –≤–æ–∑–≤—Ä–∞—â–∞—Ç—å —Å—Ç—Ä–æ–∫—É. –ï—Å–ª–∏ –±—é–¥–∂–µ—Ç–∞ —Ö–≤–∞—Ç–∞–µ—Ç –¥–ª—è –æ—Ç–æ–ø–ª–µ–Ω–∏—è –≤—Å–µ–≥–æ –æ–±—ä–µ–º–∞ —Ç–æ—Ä–≥–æ–≤–æ–≥–æ —Ü–µ–Ω—Ç—Ä–∞ - –≤—ã–≤–æ–¥–∏—Ç—Å—è '–ë—é–¥–∂–µ—Ç–∞ –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ', –µ—Å–ª–∏ –Ω–µ—Ç - '–ë—é–¥–∂–µ—Ç–∞ –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ'. –ò –≤—Å–µ üôÇ

// –ù–æ —ç—Ç–∞ –∑–∞–¥–∞—á–∞ —Å–æ–¥–µ—Ä–∂–∏—Ç –Ω–µ—Å–∫–æ–ª—å–∫–æ –ø–æ–¥–∑–∞–¥–∞—á –≤–Ω—É—Ç—Ä–∏:
// - –≤—ã—á–∏—Å–ª–µ–Ω–∏–µ –æ–±—â–µ–π –ø–ª–æ—â–∞–¥–∏ –≤—Å–µ—Ö –º–∞–≥–∞–∑–∏–Ω–æ–≤, –∫–æ—Ç–æ—Ä–∞—è –≤—ã—á–∏—Å–ª—è–µ—Ç—Å—è –∫–∞–∫ –¥–ª–∏–Ω–∞ –º–∞–≥–∞–∑–∏–Ω–∞, —É–º–Ω–æ–∂–µ–Ω–Ω–∞—è –Ω–∞ –µ–≥–æ —à–∏—Ä–∏–Ω—É;
// - –≤—ã—á–∏—Å–ª–µ–Ω–∏–µ –æ–±—â–µ–≥–æ –æ–±—ä–µ–º–∞ —Ç–æ—Ä–≥–æ–≤–æ–≥–æ —Ü–µ–Ω—Ç—Ä–∞, —Ç–∞–∫ –∫–∞–∫ —Ü–µ–Ω–∞ –æ—Ç–æ–ø–ª–µ–Ω–∏—è —É–∫–∞–∑–∞–Ω–∞ –≤ –∫—É–±–∏—á–µ—Å–∫–∏—Ö –º–µ—Ç—Ä–∞—Ö;
// - –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Ç–æ–≥–æ, —Ö–≤–∞—Ç–∞–µ—Ç –ª–∏ –±—é–¥–∂–µ—Ç–∞ –Ω–∞ –æ–ø–ª–∞—Ç—É —Ç–∞–∫–æ–≥–æ –æ–±—ä–µ–º–∞;
// - –≤—Å–µ —á–∏—Å–ª–∞ –∏–¥—É—Ç –±–µ–∑ –µ–¥–∏–Ω–∏—Ü –∏–∑–º–µ—Ä–µ–Ω–∏—è –¥–ª—è —É–ø—Ä–æ—â–µ–Ω–∏—è, –ø—Ä–æ—Å—Ç–æ —Ü–∏—Ñ—Ä—ã –∏ –≤—Å–µ;
// - —Ñ—É–Ω–∫—Ü–∏—è –¥–æ–ª–∂–Ω–∞ –ø—Ä–æ–¥–æ–ª–∂–∞—Ç—å —Ä–∞–±–æ—Ç–∞—Ç—å, –¥–∞–∂–µ –µ—Å–ª–∏ –∏–∑–º–µ–Ω—è–µ—Ç—Å—è –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –º–∞–≥–∞–∑–∏–Ω–æ–≤, 
// –≤—ã—Å–æ—Ç–∞, –±—é–¥–∂–µ—Ç –∏–ª–∏ –ø–æ–¥—Å—Ç–∞–≤–ª—è–µ—Ç—Å—è –≤–æ–æ–±—â–µ –¥—Ä—É–≥–æ–π –æ–±—ä–µ–∫—Ç.

// const shoppingMallData = {
//     shops: [
//         {
//             width: 10,
//             length: 5
//         },
//         {
//             width: 15,
//             length: 7
//         },
//         {
//             width: 20,
//             length: 5
//         },
//         {
//             width: 8,
//             length: 10
//         }
//     ],
//     height: 5,
//     moneyPer1m3: 30,
//     budget: 50000
// }

// function isBudgetEnough(data) {
//     // let volumeOfShops = data.shops.map(a => a.width * a.length).reduce((sum, item) => {
//     //     sum += item
//     //     return sum
//     // }, 0) * data.height;
//     // let costsForWarmingNeeded = volumeOfShops * data.moneyPer1m3;
//     // console.log(volumeOfShops);
//     // console.log(costsForWarmingNeeded);
//     // data.budget > costsForWarmingNeeded ? console.log('–ë—é–¥–∂–µ—Ç–∞ –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ') : console.log('–ë—é–¥–∂–µ—Ç–∞ –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ');
//     let square = 0
//     data.shops.forEach( shop => square += shop.width * shop.length );
//     let costsForWarmingNeeded = square * data.height * data.moneyPer1m3;
//     if ( data.budget > costsForWarmingNeeded) {
//         return '–ë—é–¥–∂–µ—Ç–∞ –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ'
//     } else {
//         return '–ë—é–¥–∂–µ—Ç–∞ –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ'
//     }
// }

// isBudgetEnough(shoppingMallData)
// // console.log(isBudgetEnough(shoppingMallData));


// –ó–∞–¥–∞—á–∞:

// –£ –≤–∞—Å –µ—Å—Ç—å —Å–ø–∏—Å–æ–∫ —É—á–µ–Ω–∏–∫–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ —Ö–æ—Ç—è—Ç –ø–æ–∏–≥—Ä–∞—Ç—å –≤ –∏–≥—Ä—É:

const students = ['Peter', 'Andrew', 'Ann', 'Mark', 'Josh', 'Sandra', 'Cris', 'Bernard', 'Takesi', 'Sam', 'WWW'];
// –ù–æ –∫–æ–º–∞–Ω–¥ –º–æ–∂–µ—Ç –±—ã—Ç—å —Ç–æ–ª—å–∫–æ 3 –ø–æ 3 —á–µ–ª–æ–≤–µ–∫–∞. 
// –ù–∞–ø–∏—à–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é sortStudentsByGroups, –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –≤ —Å–µ–±—è –º–∞—Å—Å–∏–≤ —Å—Ç—Ä–æ–∫.

// –í–Ω—É—Ç—Ä–∏ –æ–Ω–∞ —Å–Ω–∞—á–∞–ª–∞ —Å–æ—Ä—Ç–∏—Ä—É–µ—Ç –∏–º–µ–Ω–∞ –ø–æ –∞–ª—Ñ–∞–≤–∏—Ç—É. –ó–∞—Ç–µ–º —Ä–∞—Å–ø—Ä–µ–¥–µ–ª—è–µ—Ç —É—á–µ–Ω–∏–∫–æ–≤ –ø–æ 3 —á–µ–ª–æ–≤–µ–∫–∞ –≤ 3 –≥—Ä—É–ø–ø—ã –ø–æ –∞–ª—Ñ–∞–≤–∏—Ç–Ω–æ–º—É –ø–æ—Ä—è–¥–∫—É.
// –≠—Ç–∏ –≥—Ä—É–ø–ø—ã –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –º–∞—Å—Å–∏–≤–∞–º–∏. 
// –ö–∞–∫ –∏—Ç–æ–≥, —Ñ—É–Ω–∫—Ü–∏—è –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –Ω–æ–≤—ã–π –º–∞—Å—Å–∏–≤ —Å —Ç—Ä–µ–º—è –∫–æ–º–∞–Ω–¥–∞–º–∏ –∏ —Å—Ç—Ä–æ–∫–æ–π –∫–∞–∫ 4–π —ç–ª–µ–º–µ–Ω—Ç.
// –ü—Ä–∏–º–µ—Ä:

// sortStudentsByGroups(students)  =>

// [
//   [ 'Andrew', 'Ann', 'Bernard' ],
//   [ 'Cris', 'Josh', 'Mark' ],
//   [ 'Peter', 'Sam', 'Sandra' ],
//   '–û—Å—Ç–∞–≤—à–∏–µ—Å—è —Å—Ç—É–¥–µ–Ω—Ç—ã: Takesi'
// ]
// –ï—Å–ª–∏ —É–±—Ä–∞—Ç—å –æ–¥–Ω–æ —Å—Ç—É–¥–µ–Ω—Ç–∞ –∏–∑ —Å–ø–∏—Å–∫–∞, —Ç–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç –±—É–¥–µ—Ç:

// [
//   [ 'Andrew', 'Ann', 'Bernard' ],
//   [ 'Cris', 'Josh', 'Mark' ],
//   [ 'Peter', 'Sam', 'Sandra' ],
//   '–û—Å—Ç–∞–≤—à–∏–µ—Å—è —Å—Ç—É–¥–µ–Ω—Ç—ã: -'
// ]
// –ê –µ—Å–ª–∏ –¥–æ–±–∞–≤–∏—Ç—å –æ–¥–Ω–æ–≥–æ, —Ç–æ:

// [
//   [ 'Andrew', 'Ann', 'Bernard' ],
//   [ 'Cris', 'Josh', 'Mark' ],
//   [ 'Peter', 'Sam', 'Sandra' ],
//   '–û—Å—Ç–∞–≤—à–∏–µ—Å—è —Å—Ç—É–¥–µ–Ω—Ç—ã: Takesi, Somebody'
// ]
// –¢–æ –µ—Å—Ç—å, –º–µ–Ω—è–µ—Ç—Å—è —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ —Å—Ç—Ä–æ–∫–∏. –í—Å–µ –æ—Å—Ç–∞–≤—à–∏–µ—Å—è —É—á–µ–Ω–∏–∫–∏ –ø–æ–ø–∞–¥–∞—é—Ç —Ç—É–¥–∞.


// function sortStudentsByGroups(arr) {
//     let sortedArr = arr.sort( (a, b) => a.localeCompare(b) )
//     let leavedStudents = '-'
//     let ungameStudents = `–û—Å—Ç–∞–≤—à–∏–µ—Å—è —Å—Ç—É–¥–µ–Ω—Ç—ã: ${leavedStudents}`
//     let commands = []
//     let commandsQty = Math.floor(arr.length / 3)

       
//     for ( let i = 0, k = 0; i < commandsQty; i++ ) {
//         commands[i] = []
//         for ( let j = 0; j < 3; j++, k++ ) {
//             commands[i][j] = sortedArr[k]
//         }        
//     }

    
//     console.log(sortedArr);
//     console.log(commandsQty);
//     console.log(commands);

//     if (arr.length % 3 === 0) {
//         return commands.push(ungameStudents)
//     } else {
//         leavedStudents = arr.splice( -( arr.length % 3 ) )
//         ungameStudents = `–û—Å—Ç–∞–≤—à–∏–µ—Å—è —Å—Ç—É–¥–µ–Ω—Ç—ã: ${leavedStudents.join(', ')}`
//         console.log(ungameStudents);
//         return commands
//     }
// }

// sortStudentsByGroups(students)
// console.log(sortStudentsByGroups(students));



// function createCounter() {
//     let counter = 0
    
//     function myFunction() {
//         return counter += 1
//     }

//     return myFunction 
// }

// let increment = createCounter()


// console.log(increment());
// console.log(increment());
// console.log(increment());


// typeof(b) === ''

// console.log( NaN || 2 || undefined ); // 2 +
// console.log( NaN && 2 && undefined ); // NaN +
// console.log( 1 && 2 && 3 ); // 3 +
// console.log( !1 && 2 || !3 ); // !3- / false+
// console.log( 25 || null && !3 ); // 25 +
// console.log( NaN || null || !3 || undefined || 5); // !3- / 5
// console.log( NaN || null && !3 && undefined || 5); // 5+
// console.log( 5 === 5 && 3 > 1 || 5); // true+

// const hamburger = 3;
// const fries = 3;
// const cola = 0;
// const nuggets = 2;

// if (hamburger === 3 && cola || fries === 3 && nuggets) {
//    console.log('Done!')
// }



// ‚Ä¢	–ö–∞–∫–æ–µ –±—É–¥–µ—Ç –≤—ã–≤–µ–¥–µ–Ω–æ –∑–Ω–∞—á–µ–Ω–∏–µ: 
// let x = 5; 
// alert( x++ ); // 5 +

// ‚Ä¢	–ß–µ–º—É —Ä–∞–≤–Ω–æ —Ç–∞–∫–æ–µ –≤—ã—Ä–∞–∂–µ–Ω–∏–µ: 
// [ ] + false - null + true  // NaN +

// ‚Ä¢	–ß—Ç–æ –≤—ã–≤–µ–¥–µ—Ç —ç—Ç–æ—Ç –∫–æ–¥: 
// let y = 1; let x = y = 2; alert(x); //2 +

// ‚Ä¢	–ß–µ–º—É —Ä–∞–≤–Ω–∞ —Å—É–º–º–∞ 
// [ ] + 1 + 2  // NaN-   '12'+ –ø—É—Å—Ç–æ–π –º–∞—Å—Å–∏–≤ –≤–µ–¥–µ—Ç —Å–µ–±—è –∫–∞–∫ —Å—Ç—Ä–æ–∫–∞ –ø—Ä–∏ –æ–ø–µ—Ä–∞—Ü–∏—è—Ö —Å–ª–æ–∂–µ–Ω–∏—è

// ‚Ä¢	–ß—Ç–æ –≤—ã–≤–µ–¥–µ—Ç —ç—Ç–æ—Ç –∫–æ–¥: 
// alert( "1"[0] ) // NaN- 1+ –≤—ã–≤–µ—Å—Ç–∏ —ç–ª–µ–º–µ–Ω—Ç —Å—Ç—Ä–æ–∫–∏ –ø–æ–¥ –∏–Ω–¥–µ–∫—Å–æ–º 0

// ‚Ä¢	–ß–µ–º—É —Ä–∞–≤–Ω–æ 
// 2 && 1 && null && 0 && undefined // null+

// ‚Ä¢	–ï—Å—Ç—å –ª–∏ —Ä–∞–∑–Ω–∏—Ü–∞ –º–µ–∂–¥—É –≤—ã—Ä–∞–∂–µ–Ω–∏—è–º–∏? 
// !!( a && b ) == (a && b) // false -- && undefined / all expressions undefined +

// ‚Ä¢	–ß—Ç–æ –≤—ã–≤–µ–¥–µ—Ç —ç—Ç–æ—Ç –∫–æ–¥: 
// alert( null || 2 && 3 || 4 ) // 3+

// ‚Ä¢ –ü—Ä–∞–≤–¥–∞ –ª–∏ —á—Ç–æ a == b ?
// a = [1, 2, 3]; b = [1, 2, 3] // —ç—Ç–æ —Å—Å—ã–ª–∫–∏ –Ω–∞ —Ä–∞–∑–Ω—ã–µ –º–∞—Å—Å–∏–≤—ã false - /
//  –Ω–æ –æ–¥–∏–Ω–∞–∫–æ–≤—ñ–π —Ç–∏–ø –¥–∞–Ω–Ω—ñ—Ö thats why its true +

// ‚Ä¢	–ß—Ç–æ –≤—ã–≤–µ–¥–µ—Ç —ç—Ç–æ—Ç –∫–æ–¥: 
// alert( +"Infinity" ) // NaN- or Infinity+ —Å—Ç—Ä–æ–∫–∞ –ø—Ä–µ–æ–±—Ä–∞–∑—É–µ—Ç—å—Å—è –≤ –¥—Ä—É–≥–æ–π —Ç–∏–ø –¥–∞–Ω–Ω—ã—Ö

// ‚Ä¢	–í–µ—Ä–Ω–æ –ª–∏ —Å—Ä–∞–≤–Ω–µ–Ω–∏–µ: 
// "–Å–∂–∏–∫" > "—è–±–ª–æ–∫–æ" // true- /false+

// ‚Ä¢	–ß–µ–º—É —Ä–∞–≤–Ω–æ
//  0 || "" || 2 || undefined || true || fals–µ    // 2+

// Total score: 6 from 12 (50%) 'not bad'



// –ù—É–∂–Ω–æ –∏—Å–ø—Ä–∞–≤–∏—Ç—å —Ñ—É–Ω–∫—Ü–∏–∏ —Ç–∞–∫, —á—Ç–æ–±—ã –æ–Ω–∏ –¥–∞–≤–∞–ª–∏ –≤—Å–µ–≥–¥–∞ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç.

// 1) –§—É–Ω–∫—Ü–∏—è isOpen –Ω–µ —Ö–æ—á–µ—Ç –ø—Ä–∞–≤–∏–ª—å–Ω–æ —Ä–∞–±–æ—Ç–∞—Ç—å. 
//  –ù–µ–æ–±—Ö–æ–¥–∏–º–æ –Ω–∞–π—Ç–∏ –ø—Ä–∏—á–∏–Ω—ã –∏ –∏—Å–ø—Ä–∞–≤–∏—Ç—å.

// 2) –§—É–Ω–∫—Ü–∏—è isAverageLunchPriceTrue –¥–æ–ª–∂–Ω–∞ –±—Ä–∞—Ç—å —Ü–µ–Ω—ã –¥–≤—É—Ö –ª—é–±—ã—Ö –±–ª—é–¥ –∏–∑ –º–µ–Ω—é, 
// —Å–∫–ª–∞–¥—ã–≤–∞—Ç—å –∏—Ö –∏ —Å—Ä–∞–≤–Ω–∏–≤–∞—Ç—å —Å —Å—Ä–µ–¥–Ω–∏–º —á–µ–∫–æ–º (averageLunchPrice).
// –°–µ–π—á–∞—Å —Ñ—É–Ω–∫—Ü–∏—è —Ä–∞–±–æ—Ç–∞–µ—Ç, –Ω–æ –ø–æ—Å—Ç–æ—è–Ω–Ω–æ –≤—ã–¥–∞–µ—Ç –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç. 
// –í–µ–¥—å –∏–∑ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–Ω–æ–≥–æ –º–µ–Ω—é —Å—É–º–º–∞ –¥–≤—É—Ö –ª—é–±—ã—Ö —Ü–µ–Ω –≤—Å–µ–≥–¥–∞ –±—É–¥–µ—Ç –±–æ–ª—å—à–µ 20. 
// –ù–µ–æ–±—Ö–æ–¥–∏–º–æ –Ω–∞–π—Ç–∏ –ø—Ä–∏—á–∏–Ω—É –∏ –∏—Å–ø—Ä–∞–≤–∏—Ç—å.

// 3) –§—É–Ω–∫—Ü–∏—è transferWaitors —Å–æ–∑–¥–∞–Ω–∞ –¥–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã –∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å —à–∞–±–ª–æ–Ω –¥–∞–Ω–Ω—ã—Ö –∏ –ø–µ—Ä–µ–¥–∞–≤–∞—Ç—å –∏—Ö –≤ –¥—Ä—É–≥–æ–π —Ä–µ—Å—Ç–æ—Ä–∞–Ω. 
// –ö–æ–Ω–µ—á–Ω–æ, –≤ –¥—Ä—É–≥–æ–º —Ä–µ—Å—Ç–æ—Ä–∞–Ω–µ –±—É–¥—É—Ç –¥—Ä—É–≥–∏–µ –±–ª—é–¥–∞, –¥—Ä—É–≥–∏–µ –æ—Ñ–∏—Ü–∏–∞–Ω—Ç—ã –∏ —Ç–ø. 
// –°–µ–π—á–∞—Å —ç—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è —Ç–æ–ª—å–∫–æ –≤ –Ω–∞—á–∞–ª–µ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ –∏ –¥–æ–ª–∂–Ω–∞ –º–µ–Ω—è—Ç—å –¥–∞–Ω–Ω—ã–µ –ø—Ä–æ –æ—Ñ–∏—Ü–∏–∞–Ω—Ç–æ–≤.

// –ù–æ –≤ –Ω—ã–Ω–µ—à–Ω–µ–º –≤–∏–¥–µ –º—ã –æ–±–Ω–∞—Ä—É–∂–∏–ª–∏, —á—Ç–æ –ø–æ—Å–ª–µ –µ—ë –∑–∞–ø—É—Å–∫–∞ –Ω–µ —Ç–æ–ª—å–∫–æ –∫–æ–ø–∏—è –¥–∞–Ω–Ω—ã—Ö —Å–æ–¥–µ—Ä–∂–∏—Ç –Ω–æ–≤—ã—Ö –æ—Ñ–∏—Ü–∏–∞–Ω—Ç–æ–≤, 
// –Ω–æ –∏ –æ—Å–Ω–æ–≤–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ! –í restorantData —Å–æ—Ç—Ä—É–¥–Ω–∏–∫ Alice –∏—Å—á–µ–∑–∞–µ—Ç –∏ –∑–∞–º–µ–Ω—è–µ—Ç—Å—è Mike! 
// –ù–µ–æ–±—Ö–æ–¥–∏–º–æ –Ω–∞–π—Ç–∏ –ø—Ä–∏—á–∏–Ω—É –∏ –Ω–µ–º–µ–¥–ª–µ–Ω–Ω–æ –∏—Å–ø—Ä–∞–≤–∏—Ç—å, —á—Ç–æ–±—ã –¥–∞–Ω–Ω—ã–µ –±—ã–ª–∏ —Ä–∞–∑–¥–µ–ª–µ–Ω—ã.

const restorantData = {
    menu: [
        {
            name: 'Salad Caesar',
            price: '14$'
        },
        {
            name: 'Pizza Diavola',
            price: '9$'
        },
        {
            name: 'Beefsteak',
            price: '17$'
        },
        {
            name: 'Napoleon',
            price: '7$'
        }
    ],
    waitors: [
        {name: 'Alice', age: 22}, {name: 'John', age: 24}
    ],
    averageLunchPrice: '20$',
    openNow: true
};

function isOpen(prop) {
    let answer = '';
    prop ? answer = '–û—Ç–∫—Ä—ã—Ç–æ': answer = '–ó–∞–∫—Ä—ã—Ç–æ';

    return answer;
}

// console.log(isOpen(restorantData.openNow))

function isAverageLunchPriceTrue(fDish, sDish, average) {
    // +fDish.price.slice(0, -1) + (+sDish.price.slice(0, -1)) < +average.slice(0,-1)
    if ( parseFloat(fDish.price) + parseFloat(sDish.price) < parseFloat(average) ) {
        return '–¶–µ–Ω–∞ –Ω–∏–∂–µ —Å—Ä–µ–¥–Ω–µ–π';
    } else {
        return '–¶–µ–Ω–∞ –≤—ã—à–µ —Å—Ä–µ–¥–Ω–µ–π';
    }
}

console.log(isAverageLunchPriceTrue(restorantData.menu[0], restorantData.menu[1], restorantData.averageLunchPrice));

function transferWaitors(data) {
    
    const copy = JSON.parse(JSON.stringify(data))

    copy.waitors[0] = { name: 'Mike', age: 32 };
    console.log(copy);
    return copy;
}

transferWaitors(restorantData)
console.log(restorantData);


